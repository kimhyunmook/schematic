import { <%= classify(name) %>Model } from "../../models/<%= dasherize(name) %>.model";
import { I<%= classify(name) %>Create } from "../../<%= dasherize(name) %>.interface";
import { CreateDtoFromModel } from "src/common/helpers/create-from-model.dto";
<% 
// 자동 제외 필드: id, timestamp 필드들
const autoExcludeFields = ["id", "createdAt", "updatedAt", "deletedAt"];

// Prisma 모델 필드 분류
const requiredFields = prismaModel && prismaModel.fields 
    ? prismaModel.fields.filter((f) => 
        !f.optional &&                    // optional이 아니고
        !f.isAutoGenerated &&             // 자동생성 아니고 (@default, @updatedAt)
        !f.isId &&                        // @id 아니고
        !autoExcludeFields.includes(f.name) // 제외 목록에 없는 것
      ).map((f) => `"${f.name}"`)
    : [];

// Optional 필드: optional이거나 자동생성 필드
const optionalFields = prismaModel && prismaModel.fields 
    ? prismaModel.fields.filter((f) => 
        (f.optional || f.isAutoGenerated) && // optional이거나 자동생성이고
        !f.isId &&                            // @id 아니고
        !autoExcludeFields.includes(f.name)   // 제외 목록에 없는 것
      ).map((f) => `"${f.name}"`)
    : [];
%>
export class <%= classify(name) %>CreateDto
  extends CreateDtoFromModel({
    model: <%= classify(name) %>Model,
    pick: [<%= requiredFields.join(", ") %>],
    optional: [<%= optionalFields.join(", ") %>],
  })
  implements I<%= classify(name) %>Create {}

