import { <%= classify(name) %>Model } from "../../models/<%= dasherize(name) %>.model";
import { I<%= classify(name) %>Create } from "../../<%= dasherize(name) %>.interface";
import { CreateDtoFromModel } from "src/common/helpers/create-from-model.dto";
<% 
const excludeFields = ["id", "createdAt", "updatedAt", "deletedAt"];
const requiredFields = prismaModel && prismaModel.fields 
    ? prismaModel.fields.filter((f) => !f.optional && !excludeFields.includes(f.name)).map((f) => `"${f.name}"`)
    : [];
const optionalFields = prismaModel && prismaModel.fields 
    ? prismaModel.fields.filter((f) => f.optional && !excludeFields.includes(f.name)).map((f) => `"${f.name}"`)
    : [];
%>
export class <%= classify(name) %>CreateDto
  extends CreateDtoFromModel({
    model: <%= classify(name) %>Model,
    pick: [<%= requiredFields.join(", ") %>],
    optional: [<%= optionalFields.join(", ") %>],
  })
  implements I<%= classify(name) %>Create {}

